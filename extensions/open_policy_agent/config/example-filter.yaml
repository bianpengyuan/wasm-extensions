apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: opa
  namespace: istio-system
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: envoy.http_connection_manager
    patch:
      operation: INSERT_BEFORE
      value:
        name: istio.opa
        config_discovery:
          config_source:
            ads: {}
            initial_fetch_timeout: 0s # wait indefinitely to prevent bad Wasm fetch
          type_urls: [ "type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm"]
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: opa-config
  namespace: istio-system
spec:
  configPatches:
  - applyTo: EXTENSION_CONFIG
    match:
      context: GATEWAY
    patch:
      operation: ADD
      value:
        name: istio.opa
        typed_config:
          '@type': type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
          value:
            config:
              configuration:
                '@type': type.googleapis.com/google.protobuf.StringValue
                value: |
                  {
                    "opa_cluster_name": "outbound|8181||opa.istio-system.svc.cluster.local",
                    "opa_service_host": "opa.istio-system.svc.cluster.local",
                    "check_result_cache_valid_sec": 10
                  }
              vm_config:
                vm_id: opa
                code:
                  remote:
                    http_uri:
                      uri: https://storage.googleapis.com/istio-ecosystem/wasm-extensions/opa/test.wasm
                runtime: envoy.wasm.runtime.v8
